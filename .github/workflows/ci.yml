on:
  push:
    branches: [main, ci]
    tags: [v*]
  pull_request:
    branches: [main]
jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-license
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/cache@v1
        with:
          path: target
          key: cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - run: |
          npm install
          npm run build

      - shell: bash
        run: |
          mkdir artifact
          mv target/release/ausettings.exe \
            ./artifact/ausettings.exe
          mv license-*.* ./artifact/
      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: ./artifact

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        name: artifact
      - run: |
          zip --junk-paths release ./artifact/*
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip
